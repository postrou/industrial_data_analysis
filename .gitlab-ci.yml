stages:
  - build
  - test
  - pages

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE/test:task_4

build:
    stage: build
    image: docker:stable
    services:
        - docker:dind
    script:
        - docker info
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $CONTAINER_IMAGE .
        - docker push $CONTAINER_IMAGE

test:
    stage: test
    image: docker:stable
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $CONTAINER_IMAGE
        - docker run $CONTAINER_IMAGE
        
pages:
    stage: pages
    image: ubuntu
    script:
        - apt-get update 
        - apt-get install -y python3-pip python3-dev build-essential
        - pip3 install -r requirements.txt
        - sphinx-apidoc -f -o doc .
        - cd doc
        - make html
        - cp -r _build/html/ ../public
    artifacts:
        paths:
            - public
