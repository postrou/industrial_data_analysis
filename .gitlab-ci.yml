#image: ubuntu
#
#before_script:
#    - apt-get -qy update
#    - apt-get install -y make build-essential python3 python3-dev python3-setuptools python3-sphinx python3-pips
#    # - apk --no-cache add python3 python3-dev py-pip
#    # - apk --no-cache add make

image: docker:stable

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - build
  - test
  - doc
  - pages

before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE/test_doc:task_4

# build:
#     stage: build
#     script:
#         - docker build -t $CONTAINER_IMAGE .
#         - docker push $CI_REGISTRY_IMAGE/test_doc:task_4

# test:
#     stage: test
#     script:
#         - docker pull $CONTAINER_IMAGE
#         - docker run $CONTAINER_IMAGE

doc:
    stage: doc
    script:
        - docker pull $CONTAINER_IMAGE
#    - sphinx-quickstart \
#      --sep "n"           \
#      --dot _           \
#      -p ostroukhovpa   \
#      -a "Ostroukhov PA"\
#      -v 1.0            \
#      -r 1.0            \
#      -l en             \
#      --suffix .rst     \
#      --master index    \
#      --epub "n"          \
#      --makefile        \
#      --no-batchfile    \
#      --ext-autodoc
        # - docker run $CONTAINER_IMAGE /bin/sh
        - docker run $CONTAINER_IMAGE ls
        - docker run $CONTAINER_IMAGE ls doc
        - docker run $CONTAINER_IMAGE /bin/sh chmod +x doc
        - docker run $CONTAINER_IMAGE chmod -x doc
        - docker run $CONTAINER_IMAGE chmod +x doc
        - docker run $CONTAINER_IMAGE /bin/sh "cd doc"
        - docker run $CONTAINER_IMAGE /bin/sh "cd .."
        - docker run $CONTAINER_IMAGE sphinx-apidoc -f -o doc .

pages:
    script:
        - make html
        - mv _build/html ../public
    artifacts:
        paths:
            - /project/public
    only:
        - master
        - release
